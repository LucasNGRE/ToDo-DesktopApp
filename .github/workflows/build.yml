name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, windows-latest]  # Build sur macOS et Windows

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          echo "ðŸ“¦ Installing dependencies..."
          npm install
          npm list
          echo "âœ… Dependencies installed."

      - name: Run build script
        run: |
          chmod +x ./build-script.sh
          ./build-script.sh
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload release assets
        uses: actions/upload-artifact@v4
        with:
          name: release-build
          path: dist/

      - name: Configure Git for release push
        run: |
          echo "ðŸ“š Configuring Git with the right user..."
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          echo "ðŸ”— Setting up remote URL with the GitHub token..."
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}.git
          echo "ðŸŽ¯ Checking remote URL..."
          git remote -v

      - name: Push release to GitHub
        run: |
          echo "ðŸš€ Creating release for tag ${{ github.ref_name }}..."
          git push origin ${{ github.ref_name }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        continue-on-error: true  # Permet d'afficher les logs mÃªme si le push Ã©choue
